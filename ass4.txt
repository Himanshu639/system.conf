DECLARE
    v_roll_no    NUMBER;
    v_book_name  VARCHAR2(50);
    v_issue_date DATE;
    v_status     CHAR(1);
    v_fine_amt   NUMBER;
    v_days_late  NUMBER;

    -- Define custom exception
    FineException EXCEPTION;
    PRAGMA EXCEPTION_INIT(FineException, -20001);

BEGIN
    -- A. Accept Roll_no and Name of Book from the user.
    v_roll_no := &v_roll_no;  -- Assuming user input for Roll_no
    v_book_name := '&v_book_name';  -- Assuming user input for Book Name

    -- B. Fetch the details from the Borrower table
    SELECT Date_of_Issue, Status
    INTO v_issue_date, v_status
    FROM Borrower
    WHERE Roll_no = v_roll_no AND Name_of_Book = v_book_name;

    -- C. Check the number of days (from date of issue).
    v_days_late := SYSDATE - v_issue_date;

    -- D. If days are between 15 to 30 then the fine amount will be Rs 5 per day.
    --    If no. of days > 30, per day fine will be Rs 50 per day, and for days less than 30, Rs. 5 per day.
    IF v_days_late BETWEEN 15 AND 30 THEN
        v_fine_amt := 5 * v_days_late;
    ELSIF v_days_late > 30 THEN
        v_fine_amt := 50 * v_days_late;
    ELSE
        v_fine_amt := 0;  -- No fine for days less than 15
    END IF;

    -- E. After submitting the book, status will change from I to R.
    UPDATE Borrower
    SET Status = 'R'
    WHERE Roll_no = v_roll_no AND Name_of_Book = v_book_name;

    -- F. if condition of fine is true, then details will be stored into fine table
    IF v_fine_amt > 0 THEN
        INSERT INTO Fine (Roll_no, Date, Amt)
        VALUES (v_roll_no, SYSDATE, v_fine_amt);
    END IF;

EXCEPTION
    -- G. Handle the exception by named exception handler or user-defined exception handler
    WHEN FineException THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLCODE || ' - ' || SQLERRM);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Unexpected Error: ' || SQLCODE || ' - ' || SQLERRM);
END;
/